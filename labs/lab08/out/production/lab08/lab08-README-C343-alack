Aaron Lack alack C343 FA2020 Lab 08

Describe how you designed and implemented your classes in lab08

This lab was similar but not as complex as the ps05. For my model class, I used the same code as last problem
set but I changed getArray and random() for a 1d array instead of a 2 d-array. I used heapsort for this lab vs
. last time I used insertion sort, this helps my program run faster. I make a heapify helper method and I call
 that heapify method in heapsort to do the actual sorting. I make sure to notify my observers in these sorting
  methods. My view class is much shorter than ps05, where I put the Jframe stuff in the constructor and have
  draw point mehtod. The draw point method uses calls the draw line method where it takes the points
  (x1, y1) and (x2, y2) in this graphics context's coordinate system. So, I make an array of size 800 because
  this bests fits my jFrame, and loop through the array, and make an x and j variable and increment those
  values at each iteration. The last value is the arr[i]. My controller class instantiates a model and view
  object along with a height and width variable. I make sure to implement observer to override the update
  method and I extend jFrame. I make a constructor, and make sure to add the controller with model using the
  model.addObserver(this);. My update method calls the getArray() from model and drawPoint() from view. In my
  main method, I make a new controller object, and attach controller with model.randomize(), getArray(),
  heapsort() and view.drawPoint() to test my methods. My final output is a black upside down triangle, I
  believe my output is this because 